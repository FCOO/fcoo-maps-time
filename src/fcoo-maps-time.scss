/***********************************************
	fcoo-maps-time.scss,

	(c) 2020, FCOO

	https://github.com/FCOO/fcoo-maps
	https://github.com/FCOO


************************************************/
@use "sass:color";

/*
//BOURBON - http://bourbon.io/
@import "../bower_components/bourbon/core/bourbon";

//MODERNIZR-MIXIN - https://github.com/danielguillan/modernizr-mixin
@import "../bower_components/modernizr-mixin/stylesheets/modernizr";

//MATHSASS - https://github.com/terkel/mathsass
@import "../bower_components/mathsass/dist/math";

//MODERNIZR-SASS - http://github.com/FCOO/modernizr-scss
@import "../bower_components/modernizr-scss/dist/modernizr-scss";

//LEAFLET-MAP-SYNC https://github.com/fcoo/leaflet-map-sync
@import "../bower_components/leaflet-map-sync/src/leaflet-map-sync-outline-color";

*/

//MODERNIZR-SCSS - https://github.com/fcoo/modernizr-scss
@import "../bower_components/modernizr-scss/dist/modernizr-scss";


//JQUERY-BOOTSTRAP VARIABLES AND MIXINS
@import "../bower_components/jquery-bootstrap/src/include-jquery-bootstrap-variables";

/*
//ZOOM MODERNIZR https://github.com/fcoo/leaflet-zoom-modernizr
@import "../bower_components/leaflet-zoom-modernizr/src/leaflet-zoom-modernizr";


//LEAFLET-BOOTSTRAP - mixin to create colors for bsMarker
@import "../bower_components/sass-color-helpers/stylesheets/color-helpers";
@import "../bower_components/leaflet-bootstrap-marker/src/leaflet-bootstrap-marker-mixin";

//LEAFLET-POLYLINE - mixin to create colors for polyline and polygon
@import "../bower_components/leaflet-polyline/src/leaflet-polyline-mixin";

*/

//FONTAWESOME MIXIN
@import "../bower_components/fcoo-fontawesome/src/_fontawesome-pro-web/scss/mixins";


//FCOO-COLORS and FCOO-MAPS-COLORS
@import "../bower_components/fcoo-colors/src/fcoo-colors-mixin";
@import "../bower_components/fcoo-maps-colors/src/fcoo-maps-colors-variables";


//$time-mode-list must contains the same ids as timeModeInfo in src/fcoo-maps-time.js
$time-mode-list: 'FIXED', 'RELATIVE', 'SELECT', 'ANIMATION';
@each $time-mode in $time-mode-list {
    @include show-and-hide-for-modernizr-test( $modernizr-test: 'time-mode-' + $time-mode, $incl-no-selector: true, $incl-table-display: false);

    html.#{'time-mode-' + $time-mode} .#{'bold-for-time-mode-' + $time-mode} {
        font-weight: bold !important;
    }
}


//Border and shadow-color equar past, now, or future
.btn.btn-jb.border-color-as-time {
    .time-is-past &   { box-shadow: inset 0 0 0px 2px $time-past-color !important;   }
    .time-is-now &    { box-shadow: inset 0 0 0px 2px $time-now-color !important;    }
    .time-is-future & { box-shadow: inset 0 0 0px 2px $time-future-color !important; }
}

//show/hide for tree modes of buttom-menu: minimized, normal, and extended
@include show-and-hide-for-modernizr-test( $modernizr-test: 'bottom-menu-minimized', $incl-no-selector: true, $incl-table-display: false);
@include show-and-hide-for-modernizr-test( $modernizr-test: 'bottom-menu-normal',    $incl-no-selector: true, $incl-table-display: false);
@include show-and-hide-for-modernizr-test( $modernizr-test: 'bottom-menu-extended',  $incl-no-selector: true, $incl-table-display: false);

//show-for-phone-and-portrait-extended = Special versions = Visible for phone, portrait, and extended
//hide-for-phone-and-portrait-extended = Standard versions = Hidden for phone, portrait, and extended
.show-for-phone-and-portrait-and-extended {
    display: none !important;
}
html.phone.portrait.bottom-menu-extended {
    .show-for-phone-and-portrait-and-extended {
        display: flex !important;
    }
    .hide-for-phone-and-portrait-and-extended {
        display: none !important;
    }
}


//Special css for L.Control.BsTimeInfoControl when show==false and some info needs to be shown anyway
.leaflet-control.leaflet-button-box.forced-shown {
    visibility: visible !important;
    opacity   : .8;

    //The button is allways visible
    a.btn.hide-for-extended {
        display: inline-block !important;
    }
    a.btn.hide-for-extended * {
        display: inline-block !important;
    }
    //The extended button is allways hidden
    a.btn.show-for-extended,
    a.btn.show-for-extended * {
        display: none !important;
    }
}


//Set shadow around time-info-control indicading if the time is the past, now or the future
$shadow-width: 2px;

.leaflet-container {
    &.time-is-past   { .time-info-control a { box-shadow: 0 0 0px $shadow-width $time-past-color;   } }
    &.time-is-now    { .time-info-control a { box-shadow: 0 0 0px $shadow-width $time-now-color;    } }
    &.time-is-future { .time-info-control a { box-shadow: 0 0 0px $shadow-width $time-future-color; } }

    .time-info-control a.disabled {
        box-shadow: none;
        i {
            color      :  var(--bs-btn-disabled-color);
            font-weight: 300;
        }
    }
}

//Border and shadow-color equar past, now, or future
.btn.btn-jb.border-color-as-time {
    .time-is-past &   { box-shadow: inset 0 0 0px $shadow-width $time-past-color   !important; }
    .time-is-now &    { box-shadow: inset 0 0 0px $shadow-width $time-now-color    !important; }
    .time-is-future & { box-shadow: inset 0 0 0px $shadow-width $time-future-color !important; }
}

//show/hide for tree modes of buttom-menu: minimized, normal, and extended
@include show-and-hide-for-modernizr-test( $modernizr-test: 'bottom-menu-minimized', $incl-no-selector: true, $incl-table-display: false);
@include show-and-hide-for-modernizr-test( $modernizr-test: 'bottom-menu-normal',    $incl-no-selector: true, $incl-table-display: false);
@include show-and-hide-for-modernizr-test( $modernizr-test: 'bottom-menu-extended',  $incl-no-selector: true, $incl-table-display: false);

//show-for-phone-and-portrait-extended = Special versions = Visible for phone, portrait, and extended
//hide-for-phone-and-portrait-extended = Standard versions = Hidden for phone, portrait, and extended
.show-for-phone-and-portrait-and-extended {
    display: none !important;
}
html.phone.portrait.bottom-menu-extended {
    .show-for-phone-and-portrait-and-extended {
        display: flex !important;
    }
    .hide-for-phone-and-portrait-and-extended {
        display: none !important;
    }
}


//Style for buttons with time-slider fetures
:root {
    --slider-button-left: 40%;
}
html.no-bottom-menu-minimized {
    .btn.slider-button {
        background: none !important;
        &::before {
            content:'';
        }
     }
}

html.bottom-menu-minimized {
    .btn.slider-button {
        background-size : 100% .5em !important;
        position        : relative;
        overflow        : hidden;

        &.slide-button-panning {

            background-size : 100% .75em !important;
        }

    &::before {
            @include fa-family-classic(); //font-family: 'Font Awesome 6 Pro';
            color      : white;
            position   : absolute;
            width      : 1em;
            margin-left: -0.5em;
            left       : var(--slider-button-left);
            bottom     : -0.7em;
            display    : inline-block;
        }
    }
}

html.bottom-menu-minimized .time-is-now .btn.slider-button::before {
    color: $time-now-bg-color;
}
